# Base image for the worker-gpu-dev container.
FROM nvidia/cuda:11.0.3-base-ubuntu20.04

# Create a directory for the application.
RUN mkdir -p /llm_app

# Set working directory.
WORKDIR /llm_app

# Create folder for requirements.
RUN mkdir -p /llm_app/requirements

# Include requirements.txt and start scripts.
COPY ../requirements/requirements.worker-gpu.dev.txt /llm_app/requirements/requirements.worker-gpu.dev.txt

# Prevents Python from writing pyc files to disc (equivalent to python -B option).
ENV PYTHONDONTWRITEBYTECODE 1

# Prevents Python from buffering stdout and stderr (equivalent to python -u option).
ENV PYTHONUNBUFFERED 1

# Ignore warning message from pip when installing packages as root.
ENV PIP_ROOT_USER_ACTION=ignore

# Really necessary? APT-GET without interactive dialog.
ENV DEBIAN_FRONTEND=noninteractive

# Install main dependencies.
RUN apt-get update && \
    apt-get install --yes \
    # Operational system dependencies.
    python3-dev \
    python3-pip \
    python3-dev \
    python3-opencv \
    libglib2.0-0 \
    libcairo2-dev \
    pkg-config \
    unzip \
    curl \
    wget \
    vim \
    vim-gtk3 && \
    # Cleaning up unused files.
    # This folder contains cached package lists used by apt-get, and once the packages are installed,
    # these lists are no longer needed. Removing them helps to keep the image smaller and more efficient.
    rm -rf /var/lib/apt/lists/*

# Avoid some errors in python packages installation.
RUN pip3 install --upgrade \
    pip \
    setuptools \
    wheel

# Pytorch compatible with CUDA 11.0.
# See: https://pytorch.org/get-started/previous-versions/
RUN pip3 install -f https://download.pytorch.org/whl/torch_stable.html \
    torch==1.7.1+cu110 \
    torchvision==0.8.2+cu110 \
    torchaudio==0.7.2

# Remaining python dependencies.
RUN pip3 install --upgrade -r /llm_app/requirements/requirements.worker-gpu.dev.txt

# One line installation of zsh.
# See: https://github.com/deluan/zsh-in-docker
RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.2.1/zsh-in-docker.sh)"

# ZSH is now the default shell.
SHELL ["/usr/bin/zsh", "-c"]